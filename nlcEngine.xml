<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nlcEngine</name>
    </assembly>
    <members>
        <member name="T:nlcEngine.Audio">
            <summary>
            Provides an OpenAL audio.
            </summary>
        </member>
        <member name="P:nlcEngine.Audio.Volume">
            <summary>
            Gets or sets the volume of the audio.
            </summary>
        </member>
        <member name="P:nlcEngine.Audio.IsPlaying">
            <summary>
            Gets whether the audio is currently being played.
            </summary>
        </member>
        <member name="M:nlcEngine.Audio.LoadWave(System.String)">
            <summary>
            Loads the wave file.
            </summary>
            <param name="filename">file name</param>
            <returns>loaded audio</returns>
        </member>
        <member name="M:nlcEngine.Audio.LoadMp3(System.String)">
            <summary>
            Loads the mp3 file.
            </summary>
            <param name="filename">file name</param>
            <returns>loaded audio</returns>
        </member>
        <member name="M:nlcEngine.Audio.Play">
            <summary>
            Plays the audio.
            </summary>
        </member>
        <member name="M:nlcEngine.Audio.Pause">
            <summary>
            Pauses the audio.
            </summary>
        </member>
        <member name="M:nlcEngine.Audio.Stop">
            <summary>
            Stops the audio.
            </summary>
        </member>
        <member name="M:nlcEngine.Audio.Dispose">
            <summary>
            Releases all resource used by <see cref="T:nlcEngine.Audio"/>.
            </summary>
        </member>
        <member name="M:nlcEngine.Audio.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.Bound2">
            <summary>
            Represents a 2-dementional bounding box with float values.
            </summary>
        </member>
        <member name="P:nlcEngine.Bound2.X">
            <summary>
            Gets or sets the X.
            </summary>
        </member>
        <member name="P:nlcEngine.Bound2.Y">
            <summary>
            Gets or sets the Y.
            </summary>
        </member>
        <member name="P:nlcEngine.Bound2.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:nlcEngine.Bound2.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:nlcEngine.Bound2.RightX">
            <summary>
            Gets the right X.
            </summary>
        </member>
        <member name="P:nlcEngine.Bound2.BottomY">
            <summary>
            Gets the bottom Y.
            </summary>
        </member>
        <member name="M:nlcEngine.Bound2.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new structure with the position and size.
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="T:nlcEngine.Camera">
            <summary>
            Represents a camera.
            </summary>
        </member>
        <member name="F:nlcEngine.Camera.Position">
            <summary>
            Camera position.
            </summary>
        </member>
        <member name="F:nlcEngine.Camera.Target">
            <summary>
            Camera target point.
            </summary>
        </member>
        <member name="F:nlcEngine.Camera.Up">
            <summary>
            Camera up vector.
            </summary>
        </member>
        <member name="T:nlcEngine.Color">
            <summary>
            A color represented by RGBA components.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.R">
            <summary>
            The R component.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.G">
            <summary>
            The G component.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.B">
            <summary>
            The B component.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.A">
            <summary>
            The A component.
            </summary>
        </member>
        <member name="P:nlcEngine.Color.Rf">
            <summary>
            Gets the R component in float.
            </summary>
        </member>
        <member name="P:nlcEngine.Color.Gf">
            <summary>
            Gets the G component in float.
            </summary>
        </member>
        <member name="P:nlcEngine.Color.Bf">
            <summary>
            Gets the B component in float.
            </summary>
        </member>
        <member name="P:nlcEngine.Color.Af">
            <summary>
            Gets the A component in float.
            </summary>
        </member>
        <member name="M:nlcEngine.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new structure with the R, G, B, and A component.
            </summary>
            <param name="r">R component</param>
            <param name="g">G component</param>
            <param name="b">B component</param>
            <param name="a">A component</param>
        </member>
        <member name="M:nlcEngine.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new structure with the R, G, and B component. The A component will be set to 255.
            </summary>
            <param name="r">R component</param>
            <param name="g">G component</param>
            <param name="b">B component</param>
        </member>
        <member name="M:nlcEngine.Color.FromFloats(System.Single,System.Single,System.Single)">
            <summary>
            Returns a new structure with the R, G, and B component, specified with the float values.
            </summary>
            <param name="r">R component</param>
            <param name="g">G component</param>
            <param name="b">B component</param>
            <returns>a structure with the specified components</returns>
        </member>
        <member name="M:nlcEngine.Color.FromFloats(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a new structure with the R, G, B, and A component, specified with the float values.
            </summary>
            <param name="r">R component</param>
            <param name="g">G component</param>
            <param name="b">B component</param>
            <param name="a">A component</param>
            <returns>a structure with the specified components</returns>
        </member>
        <member name="M:nlcEngine.Color.Invert">
            <summary>
            Gets the inverted color from this structure.
            </summary>
            <returns>inverted color</returns>
        </member>
        <member name="F:nlcEngine.Color.Transparent">
            <summary>
             Gets the TRANSPARENT color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.AliceBlue">
            <summary>
             Gets the ALICEBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.AntiqueWhite">
            <summary>
             Gets the ANTIQUEWHITE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Aqua">
            <summary>
             Gets the AQUA color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Aquamarine">
            <summary>
             Gets the AQUAMARINE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Azure">
            <summary>
             Gets the AZURE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Beige">
            <summary>
             Gets the BEIGE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Bisque">
            <summary>
             Gets the BISQUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Black">
            <summary>
             Gets the BLACK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.BlanchedAlmond">
            <summary>
             Gets the BLANCHEDALMOND color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Blue">
            <summary>
             Gets the BLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.BlueViolet">
            <summary>
             Gets the BLUEVIOLET color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Brown">
            <summary>
             Gets the BROWN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.BurlyWood">
            <summary>
             Gets the BURLYWOOD color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.CadetBlue">
            <summary>
             Gets the CADETBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Chartreuse">
            <summary>
             Gets the CHARTREUSE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Chocolate">
            <summary>
             Gets the CHOCOLATE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Coral">
            <summary>
             Gets the CORAL color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.CornflowerBlue">
            <summary>
             Gets the CORNFLOWERBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Cornsilk">
            <summary>
             Gets the CORNSILK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Crimson">
            <summary>
             Gets the CRIMSON color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Cyan">
            <summary>
             Gets the CYAN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkBlue">
            <summary>
             Gets the DARKBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkCyan">
            <summary>
             Gets the DARKCYAN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkGoldenrod">
            <summary>
             Gets the DARKGOLDENROD color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkGray">
            <summary>
             Gets the DARKGRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkGreen">
            <summary>
             Gets the DARKGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkKhaki">
            <summary>
             Gets the DARKKHAKI color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkMagenta">
            <summary>
             Gets the DARKMAGENTA color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkOliveGreen">
            <summary>
             Gets the DARKOLIVEGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkOrange">
            <summary>
             Gets the DARKORANGE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkOrchid">
            <summary>
             Gets the DARKORCHID color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkRed">
            <summary>
             Gets the DARKRED color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkSalmon">
            <summary>
             Gets the DARKSALMON color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkSeaGreen">
            <summary>
             Gets the DARKSEAGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkSlateBlue">
            <summary>
             Gets the DARKSLATEBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkSlateGray">
            <summary>
             Gets the DARKSLATEGRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkTurquoise">
            <summary>
             Gets the DARKTURQUOISE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DarkViolet">
            <summary>
             Gets the DARKVIOLET color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DeepPink">
            <summary>
             Gets the DEEPPINK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DeepSkyBlue">
            <summary>
             Gets the DEEPSKYBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DimGray">
            <summary>
             Gets the DIMGRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.DodgerBlue">
            <summary>
             Gets the DODGERBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Firebrick">
            <summary>
             Gets the FIREBRICK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.FloralWhite">
            <summary>
             Gets the FLORALWHITE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.ForestGreen">
            <summary>
             Gets the FORESTGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Fuchsia">
            <summary>
             Gets the FUCHSIA color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Gainsboro">
            <summary>
             Gets the GAINSBORO color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.GhostWhite">
            <summary>
             Gets the GHOSTWHITE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Gold">
            <summary>
             Gets the GOLD color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Goldenrod">
            <summary>
             Gets the GOLDENROD color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Gray">
            <summary>
             Gets the GRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Green">
            <summary>
             Gets the GREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.GreenYellow">
            <summary>
             Gets the GREENYELLOW color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Honeydew">
            <summary>
             Gets the HONEYDEW color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.HotPink">
            <summary>
             Gets the HOTPINK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.IndianRed">
            <summary>
             Gets the INDIANRED color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Indigo">
            <summary>
             Gets the INDIGO color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Ivory">
            <summary>
             Gets the IVORY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Khaki">
            <summary>
             Gets the KHAKI color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Lavender">
            <summary>
             Gets the LAVENDER color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LavenderBlush">
            <summary>
             Gets the LAVENDERBLUSH color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LawnGreen">
            <summary>
             Gets the LAWNGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LemonChiffon">
            <summary>
             Gets the LEMONCHIFFON color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightBlue">
            <summary>
             Gets the LIGHTBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightCoral">
            <summary>
             Gets the LIGHTCORAL color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightCyan">
            <summary>
             Gets the LIGHTCYAN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightGoldenrodYellow">
            <summary>
             Gets the LIGHTGOLDENRODYELLOW color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightGreen">
            <summary>
             Gets the LIGHTGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightGray">
            <summary>
             Gets the LIGHTGRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightPink">
            <summary>
             Gets the LIGHTPINK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightSalmon">
            <summary>
             Gets the LIGHTSALMON color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightSeaGreen">
            <summary>
             Gets the LIGHTSEAGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightSkyBlue">
            <summary>
             Gets the LIGHTSKYBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightSlateGray">
            <summary>
             Gets the LIGHTSLATEGRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightSteelBlue">
            <summary>
             Gets the LIGHTSTEELBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LightYellow">
            <summary>
             Gets the LIGHTYELLOW color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Lime">
            <summary>
             Gets the LIME color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.LimeGreen">
            <summary>
             Gets the LIMEGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Linen">
            <summary>
             Gets the LINEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Magenta">
            <summary>
             Gets the MAGENTA color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Maroon">
            <summary>
             Gets the MAROON color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumAquamarine">
            <summary>
             Gets the MEDIUMAQUAMARINE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumBlue">
            <summary>
             Gets the MEDIUMBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumOrchid">
            <summary>
             Gets the MEDIUMORCHID color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumPurple">
            <summary>
             Gets the MEDIUMPURPLE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumSeaGreen">
            <summary>
             Gets the MEDIUMSEAGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumSlateBlue">
            <summary>
             Gets the MEDIUMSLATEBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumSpringGreen">
            <summary>
             Gets the MEDIUMSPRINGGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumTurquoise">
            <summary>
             Gets the MEDIUMTURQUOISE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MediumVioletRed">
            <summary>
             Gets the MEDIUMVIOLETRED color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MidnightBlue">
            <summary>
             Gets the MIDNIGHTBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MintCream">
            <summary>
             Gets the MINTCREAM color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.MistyRose">
            <summary>
             Gets the MISTYROSE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Moccasin">
            <summary>
             Gets the MOCCASIN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.NavajoWhite">
            <summary>
             Gets the NAVAJOWHITE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Navy">
            <summary>
             Gets the NAVY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.OldLace">
            <summary>
             Gets the OLDLACE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Olive">
            <summary>
             Gets the OLIVE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.OliveDrab">
            <summary>
             Gets the OLIVEDRAB color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Orange">
            <summary>
             Gets the ORANGE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.OrangeRed">
            <summary>
             Gets the ORANGERED color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Orchid">
            <summary>
             Gets the ORCHID color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PaleGoldenrod">
            <summary>
             Gets the PALEGOLDENROD color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PaleGreen">
            <summary>
             Gets the PALEGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PaleTurquoise">
            <summary>
             Gets the PALETURQUOISE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PaleVioletRed">
            <summary>
             Gets the PALEVIOLETRED color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PapayaWhip">
            <summary>
             Gets the PAPAYAWHIP color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PeachPuff">
            <summary>
             Gets the PEACHPUFF color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Peru">
            <summary>
             Gets the PERU color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Pink">
            <summary>
             Gets the PINK color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Plum">
            <summary>
             Gets the PLUM color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.PowderBlue">
            <summary>
             Gets the POWDERBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Purple">
            <summary>
             Gets the PURPLE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.RebeccaPurple">
            <summary>
             Gets the REBECCAPURPLE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Red">
            <summary>
             Gets the RED color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.RosyBrown">
            <summary>
             Gets the ROSYBROWN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.RoyalBlue">
            <summary>
             Gets the ROYALBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SaddleBrown">
            <summary>
             Gets the SADDLEBROWN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Salmon">
            <summary>
             Gets the SALMON color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SandyBrown">
            <summary>
             Gets the SANDYBROWN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SeaGreen">
            <summary>
             Gets the SEAGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SeaShell">
            <summary>
             Gets the SEASHELL color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Sienna">
            <summary>
             Gets the SIENNA color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Silver">
            <summary>
             Gets the SILVER color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SkyBlue">
            <summary>
             Gets the SKYBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SlateBlue">
            <summary>
             Gets the SLATEBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SlateGray">
            <summary>
             Gets the SLATEGRAY color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Snow">
            <summary>
             Gets the SNOW color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SpringGreen">
            <summary>
             Gets the SPRINGGREEN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.SteelBlue">
            <summary>
             Gets the STEELBLUE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Tan">
            <summary>
             Gets the TAN color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Teal">
            <summary>
             Gets the TEAL color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Thistle">
            <summary>
             Gets the THISTLE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Tomato">
            <summary>
             Gets the TOMATO color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Turquoise">
            <summary>
             Gets the TURQUOISE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Violet">
            <summary>
             Gets the VIOLET color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Wheat">
            <summary>
             Gets the WHEAT color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.White">
            <summary>
             Gets the WHITE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.WhiteSmoke">
            <summary>
             Gets the WHITESMOKE color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.Yellow">
            <summary>
             Gets the YELLOW color.
            </summary>
        </member>
        <member name="F:nlcEngine.Color.YellowGreen">
            <summary>
             Gets the YELLOWGREEN color.
            </summary>
        </member>
        <member name="T:nlcEngine.Light">
            <summary>
            Represents a light.
            </summary>
        </member>
        <member name="P:nlcEngine.Light.DiffuseColor">
            <summary>
            Gets the diffuse color.
            </summary>
        </member>
        <member name="P:nlcEngine.Light.SpecularColor">
            <summary>
            Gets the specular color.
            </summary>
        </member>
        <member name="P:nlcEngine.Light.Position">
            <summary>
            Gets the position of the light.
            </summary>
        </member>
        <member name="P:nlcEngine.Light.Radius">
            <summary>
            Gets the radius of the light.
            </summary>
        </member>
        <member name="P:nlcEngine.Light.Attenuation">
            <summary>
            Gets the attenuation.
            </summary>
        </member>
        <member name="P:nlcEngine.Light.Intensity">
            <summary>
            Gets the intensity of the light.
            </summary>
        </member>
        <member name="M:nlcEngine.Light.#ctor(nlcEngine.Color,nlcEngine.Color,nlcEngine.Vec3,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance with the light colors, position, radius, attenuation, and intensity values.
            </summary>
            <param name="diffuse">diffuse color</param>
            <param name="spec">specular color</param>
            <param name="position">position of the light</param>
            <param name="radius">radius of the light</param>
            <param name="attenuation">attenuation</param>
            <param name="intensity">intensity of the light</param>
        </member>
        <member name="T:nlcEngine.LightEnvironment">
            <summary>
            Contains the light setting of Phong-shading-model.
            </summary>
        </member>
        <member name="P:nlcEngine.LightEnvironment.AmbientIntensity">
            <summary>
            Gets or sets the intensity of the ambient light.
            </summary>
        </member>
        <member name="P:nlcEngine.LightEnvironment.AmbientColor">
            <summary>
            Gets or sets the ambient color.
            </summary>
        </member>
        <member name="P:nlcEngine.LightEnvironment.Lights">
            <summary>
            Gets the collection that contains the lights in the environment.<br />
            Maximum number of the lights is 128. Items indexed over 128 will be ignored when the scene this object is used to render.
            </summary>
        </member>
        <member name="M:nlcEngine.LightEnvironment.#ctor(System.Single,nlcEngine.Color)">
            <summary>
            Creates a new instance from the ambient light setting.
            </summary>
            <param name="ambientIntensity">intensity of the ambient light</param>
            <param name="ambientColor">color of the ambient color</param>
        </member>
        <member name="T:nlcEngine.PBRMaterial">
            <summary>
            Represents a material of PBR(Physically-Based-Rendering).
            </summary>
        </member>
        <member name="M:nlcEngine.PBRMaterial.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="P:nlcEngine.PBRMaterial.Metalness">
            <summary>
            Gets or sets the metalness.
            </summary>
        </member>
        <member name="P:nlcEngine.PBRMaterial.Roughness">
            <summary>
            Gets or sets the roughness.
            </summary>
        </member>
        <member name="P:nlcEngine.PBRMaterial.AO">
            <summary>
            Gets or sets the ambient occlusion.
            </summary>
        </member>
        <member name="T:nlcEngine.ShadowView">
            <summary>
            Contains the settings of Shadow Mapping, which is used to make shadows of objects.
            </summary>
        </member>
        <member name="P:nlcEngine.ShadowView.ShadowIntensity">
            <summary>
            Gets or sets the intensity of the shadows.
            </summary>
        </member>
        <member name="P:nlcEngine.ShadowView.LightPerspective">
            <summary>
            Gets or sets the perspective of the light that makes the shadows.
            </summary>
        </member>
        <member name="M:nlcEngine.ShadowView.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="T:nlcEngine.Transform">
            <summary>
            Represents a transformation.
            </summary>
        </member>
        <member name="P:nlcEngine.Transform.Translate">
            <summary>
            Gets or sets the translate.
            </summary>
        </member>
        <member name="P:nlcEngine.Transform.Rotate">
            <summary>
            Gets or sets the rotate.
            </summary>
        </member>
        <member name="P:nlcEngine.Transform.RotationAngle">
            <summary>
            Gets or sets the rotation angle.
            </summary>
        </member>
        <member name="P:nlcEngine.Transform.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
        </member>
        <member name="M:nlcEngine.Transform.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new structure with the parameters.
            </summary>
            <param name="tx"></param>
            <param name="ty"></param>
            <param name="tz"></param>
            <param name="rx"></param>
            <param name="ry"></param>
            <param name="rz"></param>
            <param name="a"></param>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="sz"></param>
        </member>
        <member name="M:nlcEngine.Transform.Translated(System.Single,System.Single,System.Single)">
            <summary>
            Gets the translated transform.
            </summary>
            <param name="x">translation X</param>
            <param name="y">translation Y</param>
            <param name="z">translation Z</param>
            <returns>translated transform</returns>
        </member>
        <member name="M:nlcEngine.Transform.Rotated(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the rotated transform
            </summary>
            <param name="x">rotation X</param>
            <param name="y">rotation Y</param>
            <param name="z">rotation Z</param>
            <param name="angle">rotation angle</param>
            <returns>rotated transform</returns>
        </member>
        <member name="M:nlcEngine.Transform.Scaled(System.Single,System.Single,System.Single)">
            <summary>
            Gets the scaled transform.
            </summary>
            <param name="x">scale X</param>
            <param name="y">scale Y</param>
            <param name="z">scale Z</param>
            <returns>scaled transform</returns>
        </member>
        <member name="T:nlcEngine.Vec2">
            <summary>
            A 2-dementional vector represented with 2 float values.
            </summary>
        </member>
        <member name="F:nlcEngine.Vec2.X">
            <summary>
            The X element.
            </summary>
        </member>
        <member name="F:nlcEngine.Vec2.Y">
            <summary>
            The Y element.
            </summary>
        </member>
        <member name="M:nlcEngine.Vec2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new structure with the X, and Y elements.
            </summary>
            <param name="x">X element</param>
            <param name="y">Y element</param>
        </member>
        <member name="M:nlcEngine.Vec2.#ctor(System.Single)">
            <summary>
            Initializes a new structure with the X, and Y elements as the same value.
            </summary>
            <param name="d">value for XY elements</param>
        </member>
        <member name="M:nlcEngine.Vec2.Length">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>length of the vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.Normalize">
            <summary>
            Normalizes the vector.
            </summary>
        </member>
        <member name="M:nlcEngine.Vec2.Normalized">
            <summary>
            Returns the normalised vector.
            </summary>
            <returns>normalized vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.Rotate(System.Single)">
            <summary>
            Returns the vector rotated.
            </summary>
            <param name="angle">rotation angle</param>
            <returns>rotated vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.op_Addition(nlcEngine.Vec2,nlcEngine.Vec2)">
            <summary>
            Adds the 2 vectors.
            </summary>
            <param name="left">left</param>
            <param name="right">right</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.op_Subtraction(nlcEngine.Vec2,nlcEngine.Vec2)">
            <summary>
            Subtracts the 2 vectors.
            </summary>
            <param name="left">left</param>
            <param name="right">right</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.op_UnaryNegation(nlcEngine.Vec2)">
            <summary>
            Gets the minus vector.
            </summary>
            <param name="vec">vector</param>
            <returns>-vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.op_Multiply(nlcEngine.Vec2,System.Single)">
            <summary>
            Returns the scalar product of the vector.
            </summary>
            <param name="vec">vector</param>
            <param name="scalar">scalar</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec2.op_Division(nlcEngine.Vec2,System.Single)">
            <summary>
            Retuens the scalar division of the vector.
            </summary>
            <param name="vec">vector</param>
            <param name="scalar">scalar</param>
            <returns>resulting vector</returns>
        </member>
        <member name="T:nlcEngine.Vec3">
            <summary>
            A 3-dementional vector represented with 3 float values.
            </summary>
        </member>
        <member name="F:nlcEngine.Vec3.X">
            <summary>
            The X element.
            </summary>
        </member>
        <member name="F:nlcEngine.Vec3.Y">
            <summary>
            The Y element.
            </summary>
        </member>
        <member name="F:nlcEngine.Vec3.Z">
            <summary>
            The Z element.
            </summary>
        </member>
        <member name="M:nlcEngine.Vec3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new structure with the X, Y, and Z elements.
            </summary>
            <param name="x">X element</param>
            <param name="y">Y element</param>
            <param name="z">Z element</param>
        </member>
        <member name="M:nlcEngine.Vec3.#ctor(System.Single)">
            <summary>
            Initializes a new structure with the X, Y, and Z elements as the same value.
            </summary>
            <param name="d">value for XYZ elements</param>
        </member>
        <member name="M:nlcEngine.Vec3.#ctor(nlcEngine.Vec2,System.Single)">
            <summary>
            Initializes a new structure with the X and Y element by the 2d vector, and the Z element by the float value.
            </summary>
            <param name="vec">vector</param>
            <param name="z">Z element</param>
        </member>
        <member name="M:nlcEngine.Vec3.Length">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>length of the vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.Normalize">
            <summary>
            Normalizes the vector.
            </summary>
        </member>
        <member name="M:nlcEngine.Vec3.Normalized">
            <summary>
            Gets the normalized vector.
            </summary>
            <returns>normalized vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.RotateX(System.Single)">
            <summary>
            Returns the vector rotated around the X axis.
            </summary>
            <param name="angle">rotation angle</param>
            <returns>rotated vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.RotateY(System.Single)">
            <summary>
            Returns the vector rotated around the Y axis.
            </summary>
            <param name="angle">rotation angle</param>
            <returns>rotated vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.RotateZ(System.Single)">
            <summary>
            Returns the vector rotated around the Z axis.
            </summary>
            <param name="angle">rotation angle</param>
            <returns>rotated vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.op_Addition(nlcEngine.Vec3,nlcEngine.Vec3)">
            <summary>
            Adds the 2 vectors.
            </summary>
            <param name="left">left</param>
            <param name="right">right</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.op_UnaryNegation(nlcEngine.Vec3)">
            <summary>
            Gets the minus vector.
            </summary>
            <param name="vec">vector</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.op_Subtraction(nlcEngine.Vec3,nlcEngine.Vec3)">
            <summary>
            Subtracts the 2 vectors.
            </summary>
            <param name="left">left</param>
            <param name="right">right</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.op_Multiply(nlcEngine.Vec3,System.Single)">
            <summary>
            Returns the scalar product.
            </summary>
            <param name="left">vector</param>
            <param name="scalar">scalar</param>
            <returns>resulting vector</returns>
        </member>
        <member name="M:nlcEngine.Vec3.op_Division(nlcEngine.Vec3,System.Single)">
            <summary>
            Returns the scalar division.
            </summary>
            <param name="left">vector</param>
            <param name="scalar">scalar</param>
            <returns>resulting vector</returns>
        </member>
        <member name="T:nlcEngine.Models.Animation">
            <summary>
            Represents an animation.
            </summary>
        </member>
        <member name="T:nlcEngine.Models.Animator">
            <summary>
            Provides an animator.
            </summary>
        </member>
        <member name="M:nlcEngine.Models.Animator.#ctor(nlcEngine.Models.Animation)">
            <summary>
            Creates a new instance with the animation.
            </summary>
            <param name="animation">animation</param>
        </member>
        <member name="M:nlcEngine.Models.Animator.UpdateAnimation(System.Single)">
            <summary>
            Updates the animation.
            </summary>
            <param name="dt">deltaTime</param>
        </member>
        <member name="M:nlcEngine.Models.Animator.PlayAnimation(nlcEngine.Models.Animation)">
            <summary>
            Plays the animation.
            </summary>
            <param name="animation">animation</param>
        </member>
        <member name="T:nlcEngine.Models.Mesh">
            <summary>
            Contains mesh data.
            </summary>
        </member>
        <member name="P:nlcEngine.Models.Mesh.Indices">
            <summary>
            Gets the array of the indices.
            </summary>
        </member>
        <member name="P:nlcEngine.Models.Mesh.HasTexture">
            <summary>
            Gets whether the mesh has a texture.
            </summary>
        </member>
        <member name="M:nlcEngine.Models.Mesh.LoadFile(System.String)">
            <summary>
            Loads the model in the file and returns the loaded mesh.
            </summary>
            <param name="filename">file name</param>
            <returns>created mesh instance</returns>
        </member>
        <member name="T:nlcEngine.Models.MeshObject">
            <summary>
            A base class for render-objects that contains mesh data.
            </summary>
        </member>
        <member name="P:nlcEngine.Models.MeshObject.Meshes">
            <summary>
            Gets the array that contains meshes.
            </summary>
        </member>
        <member name="P:nlcEngine.Models.MeshObject.Transform">
            <summary>
            Gets or sets the transform applied to the object.
            </summary>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.LoadMeshes(nlcEngine.Models.Mesh[])">
            <summary>
            Loads the meshes.
            </summary>
            <param name="meshes">meshes to load</param>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.CreateAnimation(System.String)">
            <summary>
            Creates a new animation.
            </summary>
            <param name="filename">filename</param>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.ApplyAnimation(nlcEngine.Models.Animator)">
            <summary>
            Applies the animator.
            </summary>
            <param name="animator">animator</param>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.DeferRender(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4)">
            <summary>
            Renders self. <br />
            THIS METHOD IS USED IN THE GAME ENGINE INTERNAL PROCESS. DO NOT CALL THIS FROM NORMAL CODE.
            </summary>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.DepthRender(OpenTK.Mathematics.Matrix4)">
            <summary>
            Renders self. <br />
            THIS METHOD IS USED IN THE GAME ENGINE INTERNAL PROCESS. DO NOT CALL THIS FROM NORMAL CODE.
            </summary>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.RenderJust(nlcEngine.Camera,nlcEngine.Transform)">
            <summary>
            Just renders the mesh.
            </summary>
            <param name="camera">camera</param>
            <param name="transform">transformation</param>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.Dispose">
            <summary>
            Releases all resources used by the mesh buffer.
            </summary>
        </member>
        <member name="M:nlcEngine.Models.MeshObject.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.Key">
            <summary>
            Represents a key.
            </summary>
        </member>
        <member name="F:nlcEngine.Key.Unknown">
            <summary>
                An unknown key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Space">
            <summary>
                The spacebar key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Apostrophe">
            <summary>
                The apostrophe key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Comma">
            <summary>
                The comma key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Minus">
            <summary>
                The minus key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Period">
            <summary>
                The period key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Slash">
            <summary>
                The slash key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D0">
            <summary>
                The 0 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D1">
            <summary>
                The 1 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D2">
            <summary>
                The 2 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D3">
            <summary>
                The 3 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D4">
            <summary>
                The 4 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D5">
            <summary>
                The 5 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D6">
            <summary>
                The 6 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D7">
            <summary>
                The 7 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D8">
            <summary>
                The 8 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D9">
            <summary>
                The 9 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Semicolon">
            <summary>
                The semicolon key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Equal">
            <summary>
                The equal key. </summary>
        </member>
        <member name="F:nlcEngine.Key.A">
            <summary>
                The A key. </summary>
        </member>
        <member name="F:nlcEngine.Key.B">
            <summary>
                The B key. </summary>
        </member>
        <member name="F:nlcEngine.Key.C">
            <summary>
                The C key. </summary>
        </member>
        <member name="F:nlcEngine.Key.D">
            <summary>
                The D key. </summary>
        </member>
        <member name="F:nlcEngine.Key.E">
            <summary>
                The E key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F">
            <summary>
                The F key. </summary>
        </member>
        <member name="F:nlcEngine.Key.G">
            <summary>
                The G key. </summary>
        </member>
        <member name="F:nlcEngine.Key.H">
            <summary>
                The H key. </summary>
        </member>
        <member name="F:nlcEngine.Key.I">
            <summary>
                The I key. </summary>
        </member>
        <member name="F:nlcEngine.Key.J">
            <summary>
                The J key. </summary>
        </member>
        <member name="F:nlcEngine.Key.K">
            <summary>
                The K key. </summary>
        </member>
        <member name="F:nlcEngine.Key.L">
            <summary>
                The L key. </summary>
        </member>
        <member name="F:nlcEngine.Key.M">
            <summary>
                The M key. </summary>
        </member>
        <member name="F:nlcEngine.Key.N">
            <summary>
                The N key. </summary>
        </member>
        <member name="F:nlcEngine.Key.O">
            <summary>
                The O key. </summary>
        </member>
        <member name="F:nlcEngine.Key.P">
            <summary>
                The P key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Q">
            <summary>
                The Q key. </summary>
        </member>
        <member name="F:nlcEngine.Key.R">
            <summary>
                The R key. </summary>
        </member>
        <member name="F:nlcEngine.Key.S">
            <summary>
                The S key. </summary>
        </member>
        <member name="F:nlcEngine.Key.T">
            <summary>
                The T key. </summary>
        </member>
        <member name="F:nlcEngine.Key.U">
            <summary>
                The U key. </summary>
        </member>
        <member name="F:nlcEngine.Key.V">
            <summary>
                The V key. </summary>
        </member>
        <member name="F:nlcEngine.Key.W">
            <summary>
                The W key. </summary>
        </member>
        <member name="F:nlcEngine.Key.X">
            <summary>
                The X key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Y">
            <summary>
                The Y key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Z">
            <summary>
                The Z key. </summary>
        </member>
        <member name="F:nlcEngine.Key.LeftBracket">
            <summary>
                The left bracket(opening bracket) key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Backslash">
            <summary>
                The backslash. </summary>
        </member>
        <member name="F:nlcEngine.Key.RightBracket">
            <summary>
                The right bracket(closing bracket) key. </summary>
        </member>
        <member name="F:nlcEngine.Key.GraveAccent">
            <summary>
                The grave accent key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Escape">
            <summary>
                The escape key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Enter">
            <summary>
                The enter key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Tab">
            <summary>
                The tab key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Backspace">
            <summary>
                The backspace key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Insert">
            <summary>
                The insert key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Delete">
            <summary>
                The delete key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Right">
            <summary>
                The right arrow key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Left">
            <summary>
                The left arrow key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Down">
            <summary>
                The down arrow key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Up">
            <summary>
                The up arrow key. </summary>
        </member>
        <member name="F:nlcEngine.Key.PageUp">
            <summary>
                The page up key. </summary>
        </member>
        <member name="F:nlcEngine.Key.PageDown">
            <summary>
                The page down key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Home">
            <summary>
                The home key. </summary>
        </member>
        <member name="F:nlcEngine.Key.End">
            <summary>
                The end key. </summary>
        </member>
        <member name="F:nlcEngine.Key.CapsLock">
            <summary>
                The caps lock key. </summary>
        </member>
        <member name="F:nlcEngine.Key.ScrollLock">
            <summary>
                The scroll lock key. </summary>
        </member>
        <member name="F:nlcEngine.Key.NumLock">
            <summary>
                The num lock key. </summary>
        </member>
        <member name="F:nlcEngine.Key.PrintScreen">
            <summary>
                The print screen key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Pause">
            <summary>
                The pause key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F1">
            <summary>
                The F1 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F2">
            <summary>
                The F2 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F3">
            <summary>
                The F3 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F4">
            <summary>
                The F4 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F5">
            <summary>
                The F5 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F6">
            <summary>
                The F6 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F7">
            <summary>
                The F7 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F8">
            <summary>
                The F8 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F9">
            <summary>
                The F9 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F10">
            <summary>
                The F10 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F11">
            <summary>
                The F11 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F12">
            <summary>
                The F12 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F13">
            <summary>
                The F13 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F14">
            <summary>
                The F14 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F15">
            <summary>
                The F15 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F16">
            <summary>
                The F16 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F17">
            <summary>
                The F17 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F18">
            <summary>
                The F18 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F19">
            <summary>
                The F19 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F20">
            <summary>
                The F20 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F21">
            <summary>
                The F21 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F22">
            <summary>
                The F22 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F23">
            <summary>
                The F23 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F24">
            <summary>
                The F24 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.F25">
            <summary>
                The F25 key. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad0">
            <summary>
                The 0 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad1">
            <summary>
                The 1 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad2">
            <summary>
                The 2 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad3">
            <summary>
                The 3 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad4">
            <summary>
                The 4 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad5">
            <summary>
                The 5 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad6">
            <summary>
                The 6 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad7">
            <summary>
                The 7 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad8">
            <summary>
                The 8 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPad9">
            <summary>
                The 9 key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadDecimal">
            <summary>
                The decimal key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadDivide">
            <summary>
                The divide key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadMultiply">
            <summary>
                The multiply key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadSubtract">
            <summary>
                The subtract key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadAdd">
            <summary>
                The add key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadEnter">
            <summary>
                The enter key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.KeyPadEqual">
            <summary>
                The equal key on the key pad. </summary>
        </member>
        <member name="F:nlcEngine.Key.LeftShift">
            <summary>
                The left shift key. </summary>
        </member>
        <member name="F:nlcEngine.Key.LeftControl">
            <summary>
                The left control key. </summary>
        </member>
        <member name="F:nlcEngine.Key.LeftAlt">
            <summary>
                The left alt key. </summary>
        </member>
        <member name="F:nlcEngine.Key.LeftSuper">
            <summary>
                The left super key. </summary>
        </member>
        <member name="F:nlcEngine.Key.RightShift">
            <summary>
                The right shift key. </summary>
        </member>
        <member name="F:nlcEngine.Key.RightControl">
            <summary>
                The right control key. </summary>
        </member>
        <member name="F:nlcEngine.Key.RightAlt">
            <summary>
                The right alt key. </summary>
        </member>
        <member name="F:nlcEngine.Key.RightSuper">
            <summary>
                The right super key. </summary>
        </member>
        <member name="F:nlcEngine.Key.Menu">
            <summary>
                The menu key. </summary>
        </member>
        <member name="F:nlcEngine.Key.LastKey">
            <summary>
                The last valid key in this enum. </summary>
        </member>
        <member name="T:nlcEngine.MouseButton">
            <summary>
            Represents a mouse button.
            </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button1">
            
             <summary>
                 The first button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button2">
            
             <summary>
                 The second button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button3">
            
             <summary>
                 The third button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button4">
            
             <summary>
                 The fourth button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button5">
            
             <summary>
                 The fifth button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button6">
            
             <summary>
                 The sixth button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button7">
            
             <summary>
                 The seventh button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Button8">
            
             <summary>
                 The eighth button. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Left">
            
             <summary>
                 The left mouse button. This corresponds to OpenTK.Windowing.GraphicsLibraryFramework.MouseButton.Button1. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Right">
            
             <summary>
                 The right mouse button. This corresponds to OpenTK.Windowing.GraphicsLibraryFramework.MouseButton.Button2. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Middle">
            
             <summary>
                 The middle mouse button. This corresponds to OpenTK.Windowing.GraphicsLibraryFramework.MouseButton.Button3. </summary>
        </member>
        <member name="F:nlcEngine.MouseButton.Last">
            
             <summary>
                 The highest mouse button available. </summary>
        </member>
        <member name="T:nlcEngine.Primitive">
            <summary>
            Primitive type to render.
            </summary>
        </member>
        <member name="F:nlcEngine.Primitive.Points">
            <summary>
            Original was GL_POINTS = 0x0000 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.Lines">
            <summary>
            Original was GL_LINES = 0x0001 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LineLoop">
            <summary>
            Original was GL_LINE_LOOP = 0x0002 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LineStrip">
            <summary>
            Original was GL_LINE_STRIP = 0x0003 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.Triangles">
            <summary>
            Original was GL_TRIANGLES = 0x0004 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TriangleStrip">
            <summary>
            Original was GL_TRIANGLE_STRIP = 0x0005 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TriangleFan">
            <summary>
            Original was GL_TRIANGLE_FAN = 0x0006 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.Quads">
            <summary>
            Original was GL_QUADS = 0x0007 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.QuadsExt">
            <summary>
                Original was GL_QUADS_EXT = 0x0007 </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LinesAdjacency">
            <summary>
            Original was GL_LINES_ADJACENCY = 0x000A </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LinesAdjacencyArb">
            <summary>
            Original was GL_LINES_ADJACENCY_ARB = 0x000A </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LinesAdjacencyExt">
            <summary>
                Original was GL_LINES_ADJACENCY_EXT = 0x000A </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LineStripAdjacency">
            <summary>
            Original was GL_LINE_STRIP_ADJACENCY = 0x000B </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LineStripAdjacencyArb">
            <summary>
            Original was GL_LINE_STRIP_ADJACENCY_ARB = 0x000B </summary>
        </member>
        <member name="F:nlcEngine.Primitive.LineStripAdjacencyExt">
            <summary>
                Original was GL_LINE_STRIP_ADJACENCY_EXT = 0x000B </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TrianglesAdjacency">
            <summary>
            Original was GL_TRIANGLES_ADJACENCY = 0x000C </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TrianglesAdjacencyArb">
            <summary>
            Original was GL_TRIANGLES_ADJACENCY_ARB = 0x000C </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TrianglesAdjacencyExt">
            <summary>
                Original was GL_TRIANGLES_ADJACENCY_EXT = 0x000C </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TriangleStripAdjacency">
            <summary>
            Original was GL_TRIANGLE_STRIP_ADJACENCY = 0x000D </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TriangleStripAdjacencyArb">
            <summary>
            Original was GL_TRIANGLE_STRIP_ADJACENCY_ARB </summary>
        </member>
        <member name="F:nlcEngine.Primitive.TriangleStripAdjacencyExt">
            <summary>
                Original was GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D</summary>
        </member>
        <member name="F:nlcEngine.Primitive.Patches">
            <summary>
            Original was GL_PATCHES </summary>
        </member>
        <member name="F:nlcEngine.Primitive.PatchesExt">
            <summary>
                Original was GL_PATCHES_EXT = 0x000E </summary>
        </member>
        <member name="T:nlcEngine.NlcArgException">
            <summary>
            An exception when thrown an argument is invalid.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcArgException.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcArgException.#ctor(System.String)">
            <summary>
            Creates a new instance with the message.
            </summary>
            <param name="msg">message</param>
        </member>
        <member name="M:nlcEngine.NlcArgException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance with the message, and the inner exception, which caused this exception.
            </summary>
            <param name="msg">message</param>
            <param name="innerException">inner exception</param>
        </member>
        <member name="T:nlcEngine.NlcCommonException">
            <summary>
            An exception thrown when general errors.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcCommonException.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcCommonException.#ctor(System.String)">
            <summary>
            Creates a new instance with the message.
            </summary>
            <param name="msg">message</param>
        </member>
        <member name="M:nlcEngine.NlcCommonException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance with the message, and the inner exception, which caused this exception.
            </summary>
            <param name="msg">message</param>
            <param name="innerException">inner exception</param>
        </member>
        <member name="T:nlcEngine.NlcNotInitializedException">
            <summary>
            An exception thrown when the game is not initialized.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcNotInitializedException.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcNotInitializedException.#ctor(System.String)">
            <summary>
            Creates a new instance with the message.
            </summary>
            <param name="msg">message</param>
        </member>
        <member name="T:nlcEngine.DeferredList">
            <summary>
            Contains the list of the objects used to render.
            </summary>
        </member>
        <member name="M:nlcEngine.DeferredList.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="P:nlcEngine.DeferredList.Objects">
            <summary>
            Gets the list of the objects.
            </summary>
        </member>
        <member name="T:nlcEngine.Bloom">
            <summary>
            Provides the bloom post process.
            </summary>
        </member>
        <member name="M:nlcEngine.Bloom.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:nlcEngine.Bloom.SetOption(nlcEngine.BloomOption)">
            <summary>
            Sets the blooming options.
            </summary>
            <param name="options">a structure that contains options</param>
        </member>
        <member name="M:nlcEngine.Bloom.Run">
            <summary>
            Runs the process.
            </summary>
        </member>
        <member name="M:nlcEngine.Bloom.Dispose">
            <summary>
            Releases all resources used by <see cref="T:nlcEngine.Bloom"/>.
            </summary>
        </member>
        <member name="M:nlcEngine.Bloom.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.BloomOption">
            <summary>
            Contains options for blooming process.
            </summary>
        </member>
        <member name="P:nlcEngine.BloomOption.BlurFactor">
            <summary>
            Gets or sets the factor for blur colors. The default value is 0.7.
            </summary>
        </member>
        <member name="P:nlcEngine.BloomOption.BaseFactor">
            <summary>
            Gets or sets the factor for base colors. The default value is 1.
            </summary>
        </member>
        <member name="P:nlcEngine.BloomOption.Intensity">
            <summary>
            Gets or sets the intensity of the emission, means the number of sample texels. The default value is 12.
            </summary>
        </member>
        <member name="P:nlcEngine.BloomOption.BlurExp">
            <summary>
            Gets or sets the exponent for the blur weights. The default value is 1400.
            </summary>
        </member>
        <member name="P:nlcEngine.BloomOption.MinBrightness">
            <summary>
            Gets or sets the minimum brightness of pixels that should be bloom-applied. The default value is 0.4.
            </summary>
        </member>
        <member name="P:nlcEngine.BloomOption.Count">
            <summary>
            Gets or sets the number of blur processes. The default value is 1.
            </summary>
        </member>
        <member name="M:nlcEngine.BloomOption.#ctor">
            <summary>
            Initializes a new structure with default values.
            </summary>
        </member>
        <member name="T:nlcEngine.Profile">
            <summary>
            Contains a setting to start a game.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.WindowWidth">
            <summary>
            Gets the width of the window.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.WindowHeight">
            <summary>
            Gets the height of the window.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.BufferWidth">
            <summary>
            Gets the width of the buffer.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.BufferHeight">
            <summary>
            Gets the height of the buffer.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.Fullscreen">
            <summary>
            Gets whether the window is fullscreen.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.Title">
            <summary>
            Gets the title text.
            </summary>
        </member>
        <member name="P:nlcEngine.Profile.Fps">
            <summary>
            Gets the fps.
            </summary>
        </member>
        <member name="M:nlcEngine.Profile.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a new profile with the window size, buffer size, and title.
            </summary>
            <param name="windowWidth">width of the window</param>
            <param name="windowHeight">height of the window</param>
            <param name="bufferWidth">width of the buffer</param>
            <param name="bufferHeight">height of the buffer</param>
            <param name="title">title text</param>
        </member>
        <member name="M:nlcEngine.Profile.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Double)">
            <summary>
            Creates a new instance with the window size, buffer size, title, and fps.
            </summary>
            <param name="windowWidth">width of the window</param>
            <param name="windowHeight">height of the window</param>
            <param name="bufferWidth">width of the buffer</param>
            <param name="bufferHeight">height of the buffer</param>
            <param name="title">title text</param>
            <param name="fps">frames-per-second</param>
        </member>
        <member name="M:nlcEngine.Profile.#ctor(System.Int32,System.Int32,System.String,System.Double)">
            <summary>
            Creates a new profile with the buffer size, title, and fps for fullscreen game.
            </summary>
            <param name="bufferWidth">width of the buffer</param>
            <param name="bufferHeight">height of the buffer</param>
            <param name="title">title text</param>
            <param name="fps">frames-per-second</param>
        </member>
        <member name="T:nlcEngine.RotationCamera">
            <summary>
            Provides a camera represented with X-axis rotation(pitch) and Y-axis rotation(yaw).
            </summary>
        </member>
        <member name="M:nlcEngine.RotationCamera.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:nlcEngine.RotationCamera.Delta(System.Single,System.Single)">
            <summary>
            Adds the delta value specified.
            </summary>
            <param name="yaw">yaw delta</param>
            <param name="pitch">pitch delta</param>
        </member>
        <member name="M:nlcEngine.RotationCamera.SetCameraTarget(nlcEngine.Camera@)">
            <summary>
            Sets the target of the specified camera, based on the holding pitch and yaw values.
            </summary>
            <param name="camera">camera to modify</param>
            <returns>direction of the camera</returns>
        </member>
        <member name="M:nlcEngine.RotationCamera.GetDirection">
            <summary>
            Gets the direction vector in unit vector.
            </summary>
            <returns>direction</returns>
        </member>
        <member name="T:nlcEngine.RenderObject">
            <summary>
            A base class for render-objects.
            </summary>
        </member>
        <member name="F:nlcEngine.RenderObject._buffer">
            <summary>
            Object buffer.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.Vertices">
            <summary>
            Gets or sets the vertices.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.Normals">
            <summary>
            Gets or sets the normals.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.TexCoords">
            <summary>
            Gets or sets the texture coords.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.Primitive">
            <summary>
            Gets or sets the primitive type used to render the vertices.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.Texture">
            <summary>
            Gets or sets the texture used to render the vertices.
            </summary>
        </member>
        <member name="P:nlcEngine.RenderObject.Transform">
            <summary>
            Gets or sets the transform applied to the object.
            </summary>
        </member>
        <member name="M:nlcEngine.RenderObject.DoCreateBuffer">
            <summary>
            Forces to create the buffer.
            </summary>
        </member>
        <member name="M:nlcEngine.RenderObject.FirstGenerateBuffer">
            <summary>
            Generates the first buffer.
            </summary>
        </member>
        <member name="M:nlcEngine.RenderObject.Rebuffer">
            <summary>
            Rebuffers.
            </summary>
        </member>
        <member name="M:nlcEngine.RenderObject.RenderJust(nlcEngine.Camera)">
            <summary>
            Just renders the object.
            </summary>
            <param name="camera">camera</param>
        </member>
        <member name="M:nlcEngine.RenderObject.DeferRender(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4)">
            <summary>
            Renders self. <br />
            THIS METHOD IS USED IN THE GAME ENGINE INTERNAL PROCESS. DO NOT CALL THIS FROM NORMAL CODE.
            </summary>
        </member>
        <member name="M:nlcEngine.RenderObject.DepthRender(OpenTK.Mathematics.Matrix4)">
            <summary>
            Renders self.<br />
            THIS METHOD IS USED IN THE GAME ENGINE INTERNAL PROCESS. DO NOT CALL THIS FROM NORMAL CODE.
            </summary>
            <param name="lightSpaceMatrix"></param>
        </member>
        <member name="M:nlcEngine.RenderObject.Dispose(System.Boolean)">
            <summary>
            Disposes the resources.
            </summary>
            <param name="disposing">disposing</param>
        </member>
        <member name="M:nlcEngine.RenderObject.Dispose">
            <summary>
            Releases all resources used by the RenderObject.
            </summary>
        </member>
        <member name="M:nlcEngine.RenderObject.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.Scene">
            <summary>
            Represents a scene in the game.
            </summary>
        </member>
        <member name="P:nlcEngine.Scene.BackgroundColor">
            <summary>
            Gets or sets the background color of the scene.
            </summary>
        </member>
        <member name="M:nlcEngine.Scene.OnUserUpdate(System.Single)">
            <summary>
            Updates the frame, called per frame, when overridden.
            </summary>
        </member>
        <member name="M:nlcEngine.Scene.OnUserRender(System.Single)">
            <summary>
            Renders the frame, called per frame, when overridden.
            </summary>
        </member>
        <member name="M:nlcEngine.Scene.OnUserConstUpdate(System.Single)">
            <summary>
            Updates the frame, called per frame, when overridden.
            </summary>
        </member>
        <member name="M:nlcEngine.Scene.OnUserLoad">
            <summary>
            Loads the frame, called when the scene is loaded, when overridden.
            </summary>
        </member>
        <member name="M:nlcEngine.Scene.OnUserCreate">
            <summary>
            Initializes the scene, called first time when the scene is loaded, when overridden.
            </summary>
        </member>
        <member name="T:nlcEngine.SceneRenderer">
            <summary>
            Provides methods to render objects.
            </summary>
        </member>
        <member name="M:nlcEngine.SceneRenderer.RenderWithLightDeferred(nlcEngine.Camera,nlcEngine.DeferredList,nlcEngine.LightEnvironment)">
            <summary>
            Renders the objects with deferred lighting.<br />
            This process should be runned at the beginning of a frame, and other objects with no deferred lighting should be rendered after this process.
            </summary>
            <param name="camera">camera</param>
            <param name="renderer">renderer</param>
            <param name="env">light environment</param>
        </member>
        <member name="M:nlcEngine.SceneRenderer.RenderWithLightAndShadowDeferred(nlcEngine.Camera,nlcEngine.DeferredList,nlcEngine.LightEnvironment,nlcEngine.ShadowView)">
            <summary>
            Renders the objects with deferred lighting and shadow mapping.<br />
            This process should be runned at the beginning of a frame, and other objects with no deferred lighting should be rendered after this process.
            </summary>
            <param name="camera">camera</param>
            <param name="renderer">renderer</param>
            <param name="env">light environment</param>
            <param name="shadowView">shadow setting</param>
        </member>
        <member name="M:nlcEngine.SceneRenderer.RenderWithLightAndShadowDeferredPBR(nlcEngine.Camera,nlcEngine.DeferredList,nlcEngine.LightEnvironment,nlcEngine.ShadowView)">
            <summary>
            NOT IMPLEMENTED YET.
            </summary>
            <param name="camera"></param>
            <param name="renderer"></param>
            <param name="env"></param>
            <param name="shadowView"></param>
        </member>
        <member name="T:nlcEngine.VectorObject">
            <summary>
            Represents a RenderObject with variable-length vertices.
            </summary>
        </member>
        <member name="M:nlcEngine.VectorObject.#ctor(nlcEngine.Primitive,System.Int32)">
            <summary>
            Creates a new instance with the primitive type.
            </summary>
            <param name="primitive">primitive type</param>
            <param name="size">initial size</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddTriangle(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color)">
            <summary>
            Adds a triangle.
            </summary>
            <param name="v1">vertex 1</param>
            <param name="v2">vertex 2</param>
            <param name="v3">vertex 3</param>
            <param name="normal">normal vector</param>
            <param name="color">color</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddTriangle(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color,nlcEngine.Color,nlcEngine.Color)">
            <summary>
            Adds a triangle.
            </summary>
            <param name="v1">vertex 1</param>
            <param name="v2">vertex 2</param>
            <param name="v3">vertex 3</param>
            <param name="normal">normal vector</param>
            <param name="color1">color</param>
            <param name="color2">color</param>
            <param name="color3">color</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddQuad(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color)">
            <summary>
            Adds a quadrangle.
            </summary>
            <param name="v1">vertex 1</param>
            <param name="v2">vertex 2</param>
            <param name="v3">vertex 3</param>
            <param name="v4">vertex 4</param>
            <param name="normal1">normal 1</param>
            <param name="normal2">normal 2</param>
            <param name="normal3">normal 3</param>
            <param name="normal4">normal 4</param>
            <param name="color">color</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddQuad(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color,nlcEngine.Color,nlcEngine.Color,nlcEngine.Color)">
            <summary>
            Adds a quadrangle.
            </summary>
            <param name="v1">vertex 1</param>
            <param name="v2">vertex 2</param>
            <param name="v3">vertex 3</param>
            <param name="v4">vertex 4</param>
            <param name="normal1">normal 1</param>
            <param name="normal2">normal 2</param>
            <param name="normal3">normal 3</param>
            <param name="normal4">normal 4</param>
            <param name="color1">color 1</param>
            <param name="color2">color 2</param>
            <param name="color3">color 3</param>
            <param name="color4">color 4</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddLine(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color,nlcEngine.Color)">
            <summary>
            Adds a line.
            </summary>
            <param name="v1">vertex 1</param>
            <param name="v2">vertex 2</param>
            <param name="normal1">normal 1</param>
            <param name="normal2">normal 2</param>
            <param name="color1">color 1</param>
            <param name="color2">color 1</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddLine(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color)">
            <summary>
            Adds a line.
            </summary>
            <param name="v1">vertex 1</param>
            <param name="v2">vertex 2</param>
            <param name="normal1">normal 1</param>
            <param name="normal2">normal 2</param>
            <param name="color">color</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddPoint(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color)">
            <summary>
            Adds a point.
            </summary>
            <param name="v">vertex</param>
            <param name="normal">normal</param>
            <param name="color">color</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddTextureQuad(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color,nlcEngine.ITexture)">
            <summary>
            Adds a textured quadrangle.
            </summary>
            <param name="v1">vertex 1, upper left</param>
            <param name="v2">vertex 2, lower left</param>
            <param name="v3">vertex 3, upper right</param>
            <param name="v4">vertex 4, lower right</param>
            <param name="normal">normal vector</param>
            <param name="color">color</param>
            <param name="texture">texture</param>
        </member>
        <member name="M:nlcEngine.VectorObject.AddTextureQuad(nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Vec3,nlcEngine.Color,nlcEngine.ITexture)">
            <summary>
            Adds a textured quadrangle.
            </summary>
            <param name="v1">vertex 1, upper left</param>
            <param name="v2">vertex 2, lower left</param>
            <param name="v3">vertex 3, upper right</param>
            <param name="v4">vertex 4, lower right</param>
            <param name="normal1">normal 1</param>
            <param name="normal2">normal 2</param>
            <param name="normal3">normal 3</param>
            <param name="normal4">normal 4</param>
            <param name="color">color</param>
            <param name="texture">texture</param>
        </member>
        <member name="M:nlcEngine.VectorObject.FirstGenerateBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:nlcEngine.VectorObject.Rebuffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:nlcEngine.Input">
            <summary>
            Provides the API to handle user input.
            </summary>
        </member>
        <member name="M:nlcEngine.Input.IsKeyDown(nlcEngine.Key)">
            <summary>
            Checks if the specified key is currently pressed.
            </summary>
            <param name="key">key</param>
            <returns>whether the key is pressed</returns>
        </member>
        <member name="M:nlcEngine.Input.IsKeyPressed(nlcEngine.Key)">
            <summary>
            Checks if the specified key is started to be pressed in this frame.
            </summary>
            <param name="key">key</param>
            <returns>whether the key is pressed</returns>
        </member>
        <member name="M:nlcEngine.Input.IsKeyReleased(nlcEngine.Key)">
            <summary>
            Checks if the specified key is released in this frame.
            </summary>
            <param name="key">key</param>
            <returns>whether the key is released</returns>
        </member>
        <member name="M:nlcEngine.Input.GetMousePoint">
            <summary>
            Gets the mouse point relative to the window.
            </summary>
            <returns>relative mouse point</returns>
        </member>
        <member name="M:nlcEngine.Input.SetMousePoint(nlcEngine.Vec2)">
            <summary>
            Sets the mouse point relative to the window.
            </summary>
            <param name="pos">relative mouse point</param>
        </member>
        <member name="M:nlcEngine.Input.SetCursorVisibility(System.Boolean)">
            <summary>
            Sets the visibility of the mouse cursor.
            </summary>
            <param name="visibility">visibility</param>
        </member>
        <member name="T:nlcEngine.NlcEngineGame">
            <summary>
            Provides the main class for Nlc Game Engine.
            </summary>
        </member>
        <member name="P:nlcEngine.NlcEngineGame.SceneService">
            <summary>
            Gets the SceneService instance.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcEngineGame.Init(nlcEngine.Profile)">
            <summary>
            Initializes the new game window and loads the all features that must be loaded on the start.
            </summary>
            <param name="profile">profile</param>
        </member>
        <member name="M:nlcEngine.NlcEngineGame.Start">
            <summary>
            Starts the game.
            </summary>
        </member>
        <member name="M:nlcEngine.NlcEngineGame.EnsureRelease(System.Action)">
            <summary>
            Ensures the action that releases some resources will be runned when the resources are disposed.
            </summary>
            <param name="action">releasing action</param>
        </member>
        <member name="T:nlcEngine.SceneService">
            <summary>
            Provides the interfaces to deal with the scenes.
            </summary>
        </member>
        <member name="P:nlcEngine.SceneService.CurrentScene">
            <summary>
            Gets the current scene.
            </summary>
        </member>
        <member name="M:nlcEngine.SceneService.Navigate(nlcEngine.Scene)">
            <summary>
            Navigates the specified scene.
            </summary>
            <param name="scene">scene</param>
        </member>
        <member name="T:nlcEngine.Viewer">
            <summary>
            Provides settings of viewer.
            </summary>
        </member>
        <member name="M:nlcEngine.Viewer.SetFieldOfViewY(System.Single)">
            <summary>
            Sets the FOV of Y.
            </summary>
            <param name="degrees">angle in degrees</param>
        </member>
        <member name="M:nlcEngine.Viewer.SetDepthNearFar(System.Single,System.Single)">
            <summary>
            Sets the depth near and far.
            </summary>
            <param name="near">depth near</param>
            <param name="far">depth far</param>
        </member>
        <member name="T:nlcEngine.IDefer">
            <summary>
            Provides objects that can be rendered with deferred shading.
            </summary>
        </member>
        <member name="M:nlcEngine.IDefer.DeferRender(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Matrix4)">
            <summary>
            Renders self with the deferred shading.
            </summary>
        </member>
        <member name="M:nlcEngine.IDefer.DepthRender(OpenTK.Mathematics.Matrix4)">
            <summary>
            Renders self on a shadow map.
            </summary>
            <param name="lightSpaceMatrix">light space matrix</param>
        </member>
        <member name="T:nlcEngine.INamed">
            <summary>
            Provides the property to retrieve the resource name held in the wrapper.
            </summary>
        </member>
        <member name="P:nlcEngine.INamed.Name">
            <summary>
            Gets the resource name.
            </summary>
        </member>
        <member name="T:nlcEngine.ITexture">
            <summary>
            Provides the common and uniform information for OpenGL texture wrappers.
            </summary>
        </member>
        <member name="P:nlcEngine.ITexture.Width">
            <summary>
            Gets the width of the texture.
            </summary>
        </member>
        <member name="P:nlcEngine.ITexture.Height">
            <summary>
            Gets the height of the texture.
            </summary>
        </member>
        <member name="P:nlcEngine.ITexture.Crop">
            <summary>
            Gets the cropping bounds of the texture.
            </summary>
        </member>
        <member name="T:nlcEngine.ObjectBuffer">
            <summary>
            Provides the wrapper for an OpenGL vertex array object, to render RenderObjects.
            </summary>
        </member>
        <member name="P:nlcEngine.ObjectBuffer.Name">
            <summary>
            Gets the name of vertex array.
            </summary>
        </member>
        <member name="M:nlcEngine.ObjectBuffer.JustCallRender">
            <summary>
            Calls DrawArrays with the vertex array binded.
            </summary>
        </member>
        <member name="M:nlcEngine.ObjectBuffer.Dispose">
            <summary>
            Releases all resources used by the buffer.
            </summary>
        </member>
        <member name="M:nlcEngine.ObjectBuffer.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.Shader">
            <summary>
            Wraps an OpenGL shader.
            </summary>
        </member>
        <member name="P:nlcEngine.Shader.Name">
            <summary>
            Gets the shader name.
            </summary>
        </member>
        <member name="P:nlcEngine.Shader.VertexShader">
            <summary>
            Gets the source code of the vertex shader.
            </summary>
        </member>
        <member name="P:nlcEngine.Shader.FragmentShader">
            <summary>
            Gets the source code of the fragment shader.
            </summary>
        </member>
        <member name="M:nlcEngine.Shader.#ctor(System.String,System.String)">
            <summary>
            Compiles the shaders, and attaches and link them on the shader program.
            </summary>
            <param name="vertexShaderSource">vertex shader source</param>
            <param name="fragmentShaderSource">fragment shader source</param>
        </member>
        <member name="M:nlcEngine.Shader.Activate">
            <summary>
            Activates the shader.
            </summary>
        </member>
        <member name="M:nlcEngine.Shader.SetInt(System.String,System.Int32)">
            <summary>
            Sets the uniform int.
            </summary>
            <param name="name">name</param>
            <param name="value">uniform</param>
        </member>
        <member name="M:nlcEngine.Shader.SetFloat(System.String,System.Single)">
            <summary>
            Sets the uniform float.
            </summary>
            <param name="name">name</param>
            <param name="value">value</param>
        </member>
        <member name="M:nlcEngine.Shader.SetBoolean(System.String,System.Boolean)">
            <summary>
            Sets the uniform boolean.
            </summary>
            <param name="name">name</param>
            <param name="value">value</param>
        </member>
        <member name="M:nlcEngine.Shader.SetVec3(System.String,nlcEngine.Vec3)">
            <summary>
            Sets the uniform vector.
            </summary>
            <param name="name">name</param>
            <param name="vector">vector</param>
        </member>
        <member name="M:nlcEngine.Shader.Dispose">
            <summary>
            Releases all resources used by the shader.
            </summary>
        </member>
        <member name="M:nlcEngine.Shader.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.SkyCubeMap">
            <summary>
            Wraps an OpenGL cube texture, which is commonly used to render the sky box.<br />
            This object is made only for sky box rendering.
            </summary>
        </member>
        <member name="P:nlcEngine.SkyCubeMap.Name">
            <summary>
            Gets the texture name.
            </summary>
        </member>
        <member name="M:nlcEngine.SkyCubeMap.#ctor(nlcEngine.Texture[])">
            <summary>
            Creates a new instance with the faces.
            </summary>
            <param name="faces">array that contains 6 faces</param>
        </member>
        <member name="M:nlcEngine.SkyCubeMap.Render(nlcEngine.Camera)">
            <summary>
            Renders the sky box. Order: right, left, top, bottom, front, back
            </summary>
            <param name="camera">camera</param>
        </member>
        <member name="M:nlcEngine.SkyCubeMap.Dispose">
            <summary>
            Releases all resources used by the sky box.
            </summary>
        </member>
        <member name="M:nlcEngine.SkyCubeMap.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
        <member name="T:nlcEngine.Subtexture">
            <summary>
            Provides a texture wrapper that contains minimal information. <br />
            Instances of subtextures can be created from only Texture class.
            </summary>
        </member>
        <member name="P:nlcEngine.Subtexture.Width">
            <summary>
            Gets the width of the texture. Returns the cropping size if this subtexture is cropped.
            </summary>
        </member>
        <member name="P:nlcEngine.Subtexture.Height">
            <summary>
            Gets the height of the texture. Returns the cropping size if this subtexture is cropped.
            </summary>
        </member>
        <member name="P:nlcEngine.Subtexture.Name">
            <summary>
            Gets the texture name. Returns the original texture name if this subtexture is subset of a texture.
            </summary>
        </member>
        <member name="P:nlcEngine.Subtexture.Crop">
            <summary>
            Gets the cropping bounds.
            </summary>
        </member>
        <member name="T:nlcEngine.Texture">
            <summary>
            Wraps an OpenGL texture.
            </summary>
        </member>
        <member name="P:nlcEngine.Texture.Name">
            <summary>
            Gets the texture name.
            </summary>
        </member>
        <member name="P:nlcEngine.Texture.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:nlcEngine.Texture.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:nlcEngine.Texture.Crop">
            <summary>
            Gets the cropping bounds.
            </summary>
        </member>
        <member name="M:nlcEngine.Texture.#ctor(System.String)">
            <summary>
            Loads the image file.
            </summary>
            <param name="filename">file name</param>
        </member>
        <member name="M:nlcEngine.Texture.#ctor(System.IO.Stream)">
            <summary>
            Loads the image from the stream.
            </summary>
            <param name="image">image stream</param>
        </member>
        <member name="M:nlcEngine.Texture.SetCrop(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the cropping bounds.
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="w">width</param>
            <param name="h">height</param>
        </member>
        <member name="M:nlcEngine.Texture.GetCropped(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the cropped texture.
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="w">width</param>
            <param name="h">height</param>
        </member>
        <member name="M:nlcEngine.Texture.Dispose">
            <summary>
            Releases all resources used by the texture.
            </summary>
        </member>
        <member name="M:nlcEngine.Texture.Finalize">
            <summary>
            A destructor.
            </summary>
        </member>
    </members>
</doc>
